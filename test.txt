1.SSH密钥
git config --global user.name "your name"
git config --global user.email "your email"

ssh-keygen -t rsa -C "your email"(生成密钥)

密钥默认位置：C:\Users\a1867/.ssh/id_rsa

ssh -T git@github.com (测试连接）

git init 新建日记本（初始化仓库）
git add 文件名 （添加文件到暂存区）
git add . (添加所有文件到暂存区）
git commit -m "提交说明" （提交到本地仓库）
git remote add origin https://github.com/Luoxiiiiiiii/git_test.git （将本地仓库与远程仓库建立连接）
git remote add origin git@github.com:Luoxiiiiiiii/git_test.git（将本地仓库与远程仓库建立连接，SSH地址）
git push -u origin main （推送到origin main分支，注意，main可能不是初始分支名字，要修改）
git push (推送到上一次设置的仓库和分支）

git branch （查看所有分支以及当前分支）
git branch -M 名字 （修改当前分支名字为“名字”）

git remote -v （查看当前远程仓库地址）
git remote remove origin （删除现有远程仓库配置）

git remote remove origin （删除旧的远程仓库配置）


New-Item .gitignore -ItemType File （创建 .gitignore 文件，用来忽视某些文件不要上传到仓库）
eg：.ipynb_checkpoints/
*-checkpoint.ipynb（忽略 Jupyter 的检查点文件夹和文件）


#一个大文件已经push后的补救方案（本地已删除）
"""
git rm --cached $(git ls-files --deleted)  # 清理暂存区中的大文件
git commit -m "Remove deleted files from staging area"  # 提交更改
git filter-branch --force --index-filter "git rm --cached --ignore-unmatch *.pdf" --prune-empty --tag-name-filter cat -- --all  # 清理历史中的大文件
git push --force  # 强制推送更新到远程仓库

"""